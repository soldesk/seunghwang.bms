<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="seunghwang.bms.login.dao.mapper.LoginMapper">

<resultMap id="userMap" type="user">
	<id property="userId" column="user_id" />
	<result property="userPw" column="user_pw"/>
	<result property="userName" column="user_name" />
	<result property="userPhone" column="user_phone" />
	<result property="userPost" column="user_post" />
	<result property="userAddress" column="user_address" />
	<result property="userEmail" column="user_email" />
	<result property="regDate" column="reg_date" />
	<result property="userState" column="user_state" />
</resultMap>

    <select id="getUser" parameterType="string" resultMap="userMap">
        select *
        from users 
        where user_id=#{userId}
    </select>
	
	<select id="getFindId" parameterType="string" resultType="string">
		select user_id
		from users
		where user_email=#{userEmail}
	</select>
	
	
	<insert id="signUp" parameterType="user" >
		insert into users
		values(#{userId},#{userPw},#{userName},#{userAddress},#{userPost},#{userEmail},
		#{userPhone},sysdate,#{userState})
	</insert>
	
	<update id="modify" parameterType="user">
		update users 
		set user_name = #{userName}, user_email = #{userEmail}, user_address= #{userAddress}, user_post = #{userPost},
			user_phone = #{userPhone}, user_pw = #{userPw}, user_state = #{userState}
		where user_id = #{userId}
	</update>
	
	<update id="pwModify" parameterType="user">
		update users 
		set user_pw = #{userPw}
		where user_id = #{userId}
	</update>
	
	<delete id="delUser" parameterType="string">
		delete users
		where user_id = #{userId}
	</delete>
	
	<update id="userStateChange" parameterType="user">
		update users 
		set user_state = #{userState}
		where user_id = #{userId}
	</update>
<!-- 	
	 <select id="getUsers" parameterType="page" resultMap="userMap">
        <![CDATA[
        select * from (
            select rownum as rnum, x.* from(
                  select * from users
                  order by reg_date desc
            )x where rownum <= #{rowCnt}*#{currentPage}
        ) where rnum > 10*(#{currentPage}-1)
        ]]>
    </select>
     -->
    <select id="getUsers" parameterType="page" resultMap="userMap">
        select * from (
             select rownum as rnum, x.* from(
                  select * from users
                   <choose>
            	  	<when test= "serchType !=null and serchType.equals('id')" >	
      					where user_id like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('phone')" >	
      					where user_phone like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('post')" >	
      					where user_post like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('name')" >	
      					where user_name like '%' || #{serchValue} || '%'
      				</when>
      				</choose>
      				         order by reg_date desc
      				
            )x  where rownum &lt;= #{rowCnt}*#{currentPage}
        ) where rnum &gt; 10*(#{currentPage}-1)
      
    </select>

	
	<select id="getTotRowCnt" resultType="int">
        select count(user_id) from users
    	           <choose>
            	  	<when test= "serchType !=null and serchType.equals('id')" >	
      					where user_id like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('phone')" >	
      					where user_phone like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('post')" >	
      					where user_post like '%' || #{serchValue} || '%'
      				</when>
      				<when test= "serchType !=null and serchType.equals('name')" >	
      					where user_name like '%' || #{serchValue} || '%'
      				</when>
      				</choose>
    </select>        
    
    
</mapper>
 
 