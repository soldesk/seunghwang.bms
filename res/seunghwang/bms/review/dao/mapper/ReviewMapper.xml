<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="seunghwang.bms.review.dao.mapper.ReviewMapper">
	<resultMap id="reviewMap" type="review" >
		<id		property="reviewId"		 column="review_id"/>
		<result	property="bookName"		 column="book_name"/>
		<result	property="reviewTitle"	 column="review_title"/>
		<result	property="reviewContent" column="review_content"/>
		<result	property="reviewGrade"	 column="review_grade"/>
		<result	property="regDate"		 column="reg_date"/>
		<result	property="bookId"		 column="book_id"/>
		<result	property="userId"		 column="user_id"/>
	</resultMap>

	<select id="getReviews" parameterType="review" resultMap="reviewMap" >
		select review_id, book_name, review_title, review_content, review_grade, reg_date, book_id, user_id
		from reviews
		order by review_id 
	</select>
	
	<select id="getBookReviews" parameterType="book" resultMap="reviewMap" >
		select review_id, book_name, review_title, review_content, review_grade, reg_date, book_id, user_id
		from reviews
		where book_id = #{bookId}
		order by reg_date desc
	</select>
	
	
	<select id="searchReview" parameterType="string" resultMap="reviewMap">
		select review_id, book_name, review_title, review_content, review_grade, reg_date, user_id
		from reviews
		where book_id = #{bookId}
	</select>
	
	<insert id="insertReview" parameterType="review">
		insert into reviews
		values(#{reviewId},#{bookName},#{reviewTitle},#{reviewContent}, #{reviewGrade}, #{regDate}, #{bookId},#{userId})
	</insert>
	
	<update id="updateReview" parameterType="review">
		update reviews
		set review_title=#{reviewTitle}, review_content=#{reviewContent}, review_grade=#{reviewGrade}
		where review_id=#{reviewId}
	</update>		
	
	<delete id="deleteReview" parameterType="review">
		delete reviews
		where review_id =#{reviewId}
	</delete>
	
	<select id="getIdGrade" parameterType="string" resultMap="reviewMap">
		select review_grade
		from reviews
		where book_id =#{bookId}
		and user_id =#{userId}
	</select>
	
	<select id="getAvgGrade" parameterType="string" resultMap="reviewMap">
		select AVG(review_grade)
		from reviews
		where book_id =#{bookId}
		group by book_id
	</select>
	
</mapper>